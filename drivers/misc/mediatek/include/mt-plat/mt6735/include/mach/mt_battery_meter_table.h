/*
 * Copyright (C) 2015 MediaTek Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 */

#ifndef _CUST_BATTERY_METER_TABLE_H
#define _CUST_BATTERY_METER_TABLE_H

#define BAT_NTC_10 1
#define BAT_NTC_47 0

#if (BAT_NTC_10 == 1)
#define RBAT_PULL_UP_R             16900
#endif

#if (BAT_NTC_47 == 1)
#define RBAT_PULL_UP_R             61900
#endif

#define RBAT_PULL_UP_VOLT          1800

typedef struct _BATTERY_PROFILE_STRUCT {
	signed int percentage;
	signed int voltage;
} BATTERY_PROFILE_STRUCT, *BATTERY_PROFILE_STRUCT_P;

typedef struct _R_PROFILE_STRUCT {
	signed int resistance;
	signed int voltage;
} R_PROFILE_STRUCT, *R_PROFILE_STRUCT_P;

typedef enum {
	T1_0C,
	T2_25C,
	T3_50C
} PROFILE_TEMPERATURE;

#if (BAT_NTC_10 == 1)
BATT_TEMPERATURE Batt_Temperature_Table[] = {
        {-20,68237},
        {-15,53650},
        {-10,42506},
        { -5,33892},
        {  0,27219},
        {  5,22021},
        { 10,17926},
        { 15,14674},
        { 20,12081},
        { 25,10000},
        { 30,8315},
        { 35,6948},
        { 40,5834},
        { 45,4917},
        { 50,4161},
        { 55,3535},
        { 60,3014},
        { 65,2586}
};
#endif

#if (BAT_NTC_47 == 1)
BATT_TEMPERATURE Batt_Temperature_Table[] = {
        {-20,483954},
        {-15,360850},
        {-10,271697},
        { -5,206463},
        {  0,158214},
        {  5,122259},
        { 10,95227},
        { 15,74730},
        { 20,59065},
        { 25,47000},
        { 30,37643},
        { 35,30334},
        { 40,24591},
        { 45,20048},
        { 50,16433},
        { 55,13539},
        { 60,11210}
};
#endif

/* T0 -10C */
BATTERY_PROFILE_STRUCT battery_profile_t0[] = {
	{0 , 4337},
	{3 , 4306},
	{5 , 4281},
	{8 , 4257},
	{10 , 4233},
	{13 , 4210},
	{15 , 4190},
	{18 , 4173},
	{20 , 4149},
	{23 , 4108},
	{25 , 4068},
	{28 , 4042},
	{30 , 3996},
	{33 , 3940},
	{35 , 3914},
	{38 , 3897},
	{40 , 3882},
	{43 , 3869},
	{45 , 3856},
	{48 , 3844},
	{50 , 3831},
	{53 , 3819},
	{55 , 3806},
	{58 , 3794},
	{61 , 3784},
	{63 , 3774},
	{66 , 3766},
	{68 , 3757},
	{71 , 3749},
	{73 , 3740},
	{76 , 3729},
	{78 , 3718},
	{81 , 3704},
	{83 , 3688},
	{86 , 3669},
	{88 , 3644},
	{91 , 3614},
	{93 , 3572},
	{96 , 3524},
	{98 , 3454},
	{100 , 3400},
	{100 , 3400},
	{100 , 3400},
	{100 , 3400},
	{100 , 3400},
	{100 , 3400},
	{100 , 3400},
	{100 , 3400},
	{100 , 3400},
	{100 , 3400},
	{100 , 3400},
	{100 , 3400}

};

/* T1 0C */
BATTERY_PROFILE_STRUCT battery_profile_t1[] = {
	{0 , 4346},
	{2 , 4320},
	{4 , 4296},
	{7 , 4273},
	{9 , 4251},
	{11 , 4228},
	{13 , 4200},
	{15 , 4146},
	{18 , 4100},
	{20 , 4081},
	{22 , 4060},
	{24 , 4022},
	{26 , 3989},
	{29 , 3967},
	{31 , 3950},
	{33 , 3936},
	{35 , 3921},
	{37 , 3905},
	{40 , 3889},
	{42 , 3874},
	{44 , 3861},
	{46 , 3849},
	{48 , 3839},
	{51 , 3829},
	{53 , 3820},
	{55 , 3812},
	{57 , 3804},
	{59 , 3797},
	{62 , 3790},
	{64 , 3783},
	{66 , 3776},
	{68 , 3770},
	{70 , 3763},
	{73 , 3756},
	{75 , 3747},
	{77 , 3737},
	{79 , 3728},
	{81 , 3720},
	{84 , 3714},
	{86 , 3708},
	{88 , 3700},
	{90 , 3689},
	{92 , 3667},
	{95 , 3628},
	{97 , 3567},
	{99 , 3475},
	{100 , 3400},
	{100 , 3400},
	{100 , 3400},
	{100 , 3400},
	{100 , 3400},
	{100 , 3400}

};

/* T2 25C */
BATTERY_PROFILE_STRUCT battery_profile_t2[] = {
	{0 , 4343},
	{2 , 4310},
	{4 , 4284},
	{6 , 4260},
	{8 , 4238},
	{10 , 4215},
	{12 , 4194},
	{14 , 4172},
	{16 , 4151},
	{18 , 4131},
	{20 , 4110},
	{22 , 4091},
	{23 , 4078},
	{25 , 4058},
	{27 , 4029},
	{29 , 4008},
	{31 , 3994},
	{33 , 3982},
	{35 , 3968},
	{37 , 3952},
	{39 , 3935},
	{41 , 3916},
	{43 , 3898},
	{45 , 3881},
	{47 , 3867},
	{49 , 3856},
	{51 , 3845},
	{53 , 3836},
	{55 , 3828},
	{57 , 3820},
	{59 , 3813},
	{61 , 3806},
	{63 , 3800},
	{65 , 3795},
	{67 , 3790},
	{69 , 3785},
	{70 , 3781},
	{72 , 3778},
	{74 , 3774},
	{76 , 3770},
	{78 , 3763},
	{80 , 3756},
	{82 , 3748},
	{84 , 3735},
	{86 , 3721},
	{88 , 3705},
	{90 , 3699},
	{92 , 3697},
	{94 , 3694},
	{96 , 3683},
	{98 , 3606},
	{100 , 3400}

};

/* T3 50C */
BATTERY_PROFILE_STRUCT battery_profile_t3[] = {
	{0 , 4343},
	{2 , 4314},
	{4 , 4289},
	{6 , 4265},
	{8 , 4242},
	{10 , 4219},
	{12 , 4197},
	{14 , 4175},
	{16 , 4153},
	{18 , 4132},
	{20 , 4111},
	{21 , 4090},
	{23 , 4071},
	{25 , 4051},
	{27 , 4033},
	{29 , 4014},
	{31 , 3997},
	{33 , 3981},
	{35 , 3965},
	{37 , 3950},
	{39 , 3935},
	{41 , 3920},
	{43 , 3902},
	{45 , 3882},
	{47 , 3864},
	{49 , 3849},
	{51 , 3837},
	{53 , 3827},
	{55 , 3818},
	{57 , 3810},
	{59 , 3803},
	{61 , 3795},
	{62 , 3789},
	{64 , 3784},
	{66 , 3778},
	{68 , 3773},
	{70 , 3768},
	{72 , 3762},
	{74 , 3752},
	{76 , 3746},
	{78 , 3739},
	{80 , 3731},
	{82 , 3724},
	{84 , 3715},
	{86 , 3700},
	{88 , 3684},
	{90 , 3674},
	{92 , 3672},
	{94 , 3670},
	{96 , 3664},
	{98 , 3606},
	{100 , 3400}

};

/* battery profile for actual temperature. The size should be the same as T1, T2 and T3 */
BATTERY_PROFILE_STRUCT battery_profile_temperature[] = {
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 }
};

/* T0 -10C */
R_PROFILE_STRUCT r_profile_t0[] = {
	{1853 , 3712},
	{1905 , 3707},
	{1965 , 3702},
	{2010 , 3696},
	{2080 , 3678},
	{2123 , 3647},
	{2035 , 3612},
	{1943 , 3575},
	{1853 , 3537},
	{1770 , 3502},
	{1685 , 3472},
	{1623 , 3443},
	{1550 , 3419},
	{1493 , 3395},
	{1448 , 3373},
	{1395 , 3357},
	{1368 , 3341},
	{1338 , 3328},
	{1303 , 3317},
	{1298 , 3307},
	{1263 , 3300},
	{1253 , 3293},
	{1260 , 3288},
	{1225 , 3283},
	{1240 , 3275},
	{1198 , 3271},
	{1215 , 3267},
	{1198 , 3260},
	{1200 , 3256},
	{1218 , 3251},
	{1228 , 3243},
	{1138 , 3239},
	{1230 , 3233},
	{1243 , 3225},
	{1155 , 3218},
	{1165 , 3214},
	{1045 , 3209},
	{1170 , 3202},
	{1183 , 3196},
	{1340 , 3185},
	{1368 , 3171},
	{1423 , 3157},
	{1455 , 3142},
	{1533 , 3125},
	{1365 , 3114},
	{1653 , 3095},
	{1653 , 3095},
	{1653 , 3095},
	{633 , 4048},
	{633 , 4008},
	{678 , 3989},
	{685 , 3977}
};

/* T1 0C */
R_PROFILE_STRUCT r_profile_t1[] = {
	{1853 , 3712},
	{1905 , 3707},
	{1965 , 3702},
	{2010 , 3696},
	{2080 , 3678},
	{2123 , 3647},
	{2035 , 3612},
	{1943 , 3575},
	{1853 , 3537},
	{1770 , 3502},
	{1685 , 3472},
	{1623 , 3443},
	{1550 , 3419},
	{1493 , 3395},
	{1448 , 3373},
	{1395 , 3357},
	{1368 , 3341},
	{1338 , 3328},
	{1303 , 3317},
	{1298 , 3307},
	{1263 , 3300},
	{1253 , 3293},
	{1260 , 3288},
	{1225 , 3283},
	{1240 , 3275},
	{1198 , 3271},
	{1215 , 3267},
	{1198 , 3260},
	{1200 , 3256},
	{1218 , 3251},
	{1228 , 3243},
	{1138 , 3239},
	{1230 , 3233},
	{1243 , 3225},
	{1155 , 3218},
	{1165 , 3214},
	{1045 , 3209},
	{1170 , 3202},
	{1183 , 3196},
	{1340 , 3185},
	{1368 , 3171},
	{1423 , 3157},
	{1455 , 3142},
	{1533 , 3125},
	{1365 , 3114},
	{1653 , 3095},
	{1653 , 3095},
	{1653 , 3095},
	{633 , 4048},
	{633 , 4008},
	{678 , 3989},
	{685 , 3977}
};

/* T2 25C */
R_PROFILE_STRUCT r_profile_t2[] = {
	{700 , 3966},
	{713 , 3960},
	{728 , 3956},
	{748 , 3951},
	{753 , 3948},
	{763 , 3941},
	{763 , 3935},
	{768 , 3928},
	{783 , 3922},
	{775 , 3914},
	{780 , 3906},
	{790 , 3898},
	{790 , 3892},
	{793 , 3882},
	{798 , 3872},
	{778 , 3860},
	{778 , 3849},
	{770 , 3839},
	{778 , 3831},
	{770 , 3824},
	{785 , 3818},
	{795 , 3815},
	{785 , 3808},
	{805 , 3805},
	{810 , 3803},
	{815 , 3798},
	{818 , 3796},
	{835 , 3793},
	{838 , 3792},
	{840 , 3790},
	{865 , 3790},
	{863 , 3788},
	{880 , 3788},
	{893 , 3787},
	{908 , 3787},
	{928 , 3785},
	{933 , 3785},
	{960 , 3784},
	{965 , 3782},
	{990 , 3779},
	{1003 , 3777},
	{1033 , 3774},
	{1045 , 3769},
	{1070 , 3766},
	{1098 , 3762},
	{1113 , 3756},
	{1145 , 3748},
	{1185 , 3742},
	{1208 , 3734},
	{1248 , 3724},
	{1295 , 3714},
	{1333 , 3708}
};

/* T3 50C */
R_PROFILE_STRUCT r_profile_t3[] = {
	{1405 , 3703},
	{1465 , 3701},
	{1560 , 3699},
	{1643 , 3696},
	{1745 , 3689},
	{1815 , 3662},
	{1863 , 3601},
	{1840 , 3533},
	{1688 , 3475},
	{1560 , 3418},
	{1418 , 3363},
	{1313 , 3315},
	{1200 , 3270},
	{1100 , 3238},
	{1060 , 3208},
	{980 , 3191},
	{1000 , 3172},
	{955 , 3159},
	{878 , 3150},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{960 , 3137},
	{250 , 4165},
	{250 , 4149},
	{243 , 4136},
	{240 , 4121},
	{250 , 4110},
	{250 , 4098},
	{248 , 4086},
	{258 , 4081}
};

/* r-table profile for actual temperature. The size should be the same as T1, T2 and T3 */
R_PROFILE_STRUCT r_profile_temperature[] = {
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 }
};

/* ============================================================
// function prototype
// ============================================================*/
int fgauge_get_saddles(void);
BATTERY_PROFILE_STRUCT_P fgauge_get_profile(unsigned int temperature);

int fgauge_get_saddles_r_table(void);
R_PROFILE_STRUCT_P fgauge_get_profile_r_table(unsigned int temperature);

#endif	/*#ifndef _CUST_BATTERY_METER_TABLE_H*/

